[
  {
    "title": "Aucuparia",
    "slug": "aucuparia",
    "start": "May 2016",
    "end": "Nov 2016",
    "image": true,
    "intro": "I led the front-end for Aucuparia, a park and green-space consultancy",
    "text": "<p>I worked with the team at SpectraKey to create a portfolio website for Aucuparia Consultancy. The customer needed to be able to iterate over the content quickly, adding projects and experiences on the fly. <br>We opted for a CMS using Python and Django, chosen for it’s simple admin panel and authorization system. This was fronted with Django’s REST api framework, allowing us to separate the concerns of the project. The REST api is consumed on the front-end using AngularJS.</p>",
    "company": "SpectraKey",
    "link": "http://www.aucuparia.co.uk",
    "skills": [
      "HTML",
      "CSS",
      "LESS",
      "AngularJS",
      "Python",
      "Django",
      "Git",
      "GitLab",
      "AWS ECS"
    ]
  },{
    "title": "Dashboard App",
    "slug": "dashboard-app",
    "start": "Jan 2016",
    "end": "Jun 2016",
    "image": true,
    "intro": "Full-stack development of dashboard app for Evident Legal's will writing scheme",
    "text": "<p>I created a data visualisation tool for a will writing scheme we were launching, at Evident Legal. It offered valuable insight to stakeholders and the marketing team, showing various key performance indicators, so they could make informed decisions on the scheme's success.</p><p>It was also used to demonstrate our data collection capabilities to charities in the acquisition stage. This helped us sign six leading charities with the scheme set to generate £500,000 in the first year.</p><p>The visual output could be filtered by date range and split by daily, weekly and monthly intervals, so we could track the progress of the scheme. It could also be filtered by channel partner, using a SalesForce integration to view data form channels users. I also included the ability to exclude certain users from the report, if they were used for testing or appeared to be spam. I secured the app using Auth0, which offered a simple token based authorization with complex management tools and the ability to perform simple role based permissions and resource lockdown.</p><p>I built the app using NodeJS on the back-end and AngularJS on the front, allowing me to separate the concerns of the project. DevOps was handled with Docker, Github and CircleCI, for a seamless deployment pipeline and production is handled using AWS Elastic Container Service.</p>",
    "company": "Evident Legal",
    "link": null,
    "skills": [
      "HTML",
      "CSS",
      "LESS",
      "AngularJS",
      "NodeJS",
      "Git",
      "Docker",
      "CircleCI",
      "AWS ECS"
    ]
  },{
    "title": "Distiller Service",
    "slug": "distiller",
    "start": "Sep 2016",
    "end": "Jan 2017",
    "image": true,
    "intro": "Back-end service for processing Will interview data that allowed us to report legacy giving data to charities ",
    "text": "<p>After building the dashboard app, working with the charities to understand their needs, I realised we needed to report with a higher level of granularity. Charities wanted to know exact values for legacy gifts to see if the scheme was making a good return on investment.</p><p>I took a ground up approach spec’ing, designing and building a system to deliver this data in real-time. I needed the system to be resilient and stable so I opted for Java and Elasticsearch. The service runs against a replication database in our Rackspace ecosystem, with Elasticsearch hosted in an AWS EC2 instance.</p><p>To reduce load on the system the service runs in a 5 minutes digest cycle. If the schema in Elastic needs changing, Distiller can digest the entire dataset in monthly chunks, further reducing memory usage, cutting server expense.</p>",
    "company": "Evident Legal",
    "link": null,
    "skills": [
      "Java",
      "ElasticSearch",
      "MySQL"
    ]
  },{
    "title": "Stats Bot",
    "slug": "stats-bot",
    "start": "Dec 2016",
    "end": "Jan 2017",
    "image": false,
    "intro": "Slack bot for extracting legacy giving data from Elasticsearch",
    "text": "<p>After building the distiller, we needed a simple method for creating a report before the visual dashboard was implemented. I created a Slack integration that generates a CSV of the giving data, by flattening the schema in Elasticsearch, so we could see each gift individually. The resulting CSV is then encrypted and uploaded into Slack. I built the app using NodeJS wrapped with Typescript for increased tooling. It's hosted using AWS elastic container service.</p>",
    "company": "Evident Legal",
    "link": null,
    "skills": [
      "NodeJS",
      "TypeScript",
      "ES6",
      "Slack API",
      "AWS ECS"
    ]
  },{
    "title": "Component Re-design",
    "slug": "component-re-design",
    "start": "Jul 2016",
    "end": null,
    "image": false,
    "intro": "Experimenting with modernizing elements of our Webapp",
    "text": "<p>The Webapp, which provided the majority of Evident-Legal's sites, had become rather monolithic. I was tasked with exploring how front-end components could interact with RESTful services. I used AngularJS to rebuild our document storage component.</p><p>The document automation system we used was also cumbersome and inflexible. I used Angular2 to dynamically build an interview UI from a RESTful wrapper of the document automation system.</p>",
    "company": "Evident Legal",
    "link": null,
    "skills": [
      "HTML",
      "AngularJS",
      "AWS S3",
      "RESTful"
    ]
  },{
    "title": "Conveyancing Quoter",
    "slug": "conveyancing-quoter",
    "start": "Jun 2016",
    "end": "Sep 2016",
    "image": false,
    "intro": "System to retrieve a conveyancing quote",
    "text": "<p>I was approached by one of the conveyancing companies in the group. They thought more conveyancing leads could be generated online by driving PPC traffic to a conveyancing quote engine. They needed a simple system that allowed them to edit the fee scales and a UI where customers could retrieve a quote. I used tools non-developers are familiar with to create a CSV of hashed quote key/value pairs, which was converted to JSON for the frontend to consume. The UI gives the customer a simplified visual fee break down and emails the full breakdown, for their record. Designed to be plugged into any site, I chose AWS S3 for its simplicity, reliability and ease of deployment.</p>",
    "company": "Evident Legal/JS Law",
    "link": "https://www.simplifythelaw.co.uk/conveyancing/what-is-conveyancing/conveyancing-quote",
    "skills": [
      "HTML",
      "CSS",
      "KnockoutJS",
      "AWS S3"
    ]
  },{
    "title": "Georgina Cope",
    "slug": "georgina-cope",
    "start": "Nov 2014",
    "end": "Jan 2015",
    "image": true,
    "intro": "Static site for a photographer's portfolio",
    "text": "<p>I developed a static, responsive, website showcasing Georgina's work.  I used grunt to generate different image resolutions for different browser viewport sizes. This optimized the site making it load much faster on mobile devices.</p>",
    "company": "SpectraKey",
    "link": "http://www.georginacope.co.uk",
    "skills": [
      "HTML",
      "CSS",
      "JavaScript",
      "Assemble",
      "Grunt"
    ]
  }
]